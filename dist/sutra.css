/*doc
---
title: Buttons
name: button
category: Base CSS
---

Button styles can be applied to any element. Typically you'll want to use either a `<button>` or an `<a>` element:

```html_example
<button class="btn btnDefault">Click</button>
<a class="btn btnPrimary" href="http://trulia.com">Trulia!</a>
```

*/
/*doc
---
title: Scale factor constants
name: scale-factor-constants
category: Configuration
---

The scale factor constants are the preset modular scale factors that are used in line-height, font-size and margin calculations.


```html_example_table
<button class="btn btnDefault">Click</button>

<a class="btn btnDefault" href="trulia.com">Trulia!</a>
```


*/
/*doc
---
title: Grid breakpoints
name: grid-breakpoints
category: Configuration
---

The grid breakpoints define at which points the new grid constraints are applied on the document.

```scss
// Grid breakpoints
$xs: 0;
$sm: 544px;
$md: 768px;
$lg: 992px;
$xl: 1200px;
```

*/
/*doc
---
title: Horizontal Gird
name: horizontal-grid
category: Configuration
---

The grid breakpoints define at which points the new grid constraints are applied on the document.

```scss
$horizontal-grid: true !default;
```

*/
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0b1 | 201101
   NOTE: WORK IN PROGRESS
   USE WITH CAUTION AND TEST WITH ABANDON */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

/* remember to define visible focus styles!
:focus {
	outline: ?????;
} */
/* remember to highlight inserts somehow! */
ins {
  text-decoration: none; }

del {
  text-decoration: line-through; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

html {
  box-sizing: border-box; }

*, *::before, *::after {
  box-sizing: inherit; }

@-ms-viewport {
  width: device-width; }

html {
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: transparent; }

:root {
  font-size: 16; }

body {
  font-family: "Proxima Nova", BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  font-size: 21px;
  font-size: 1.3125rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  color: black;
  background-color: none;
  margin: 0; }

[tabindex="-1"]:focus {
  outline: none !important; }

p {
  margin-top: 0;
  margin-bottom: 16px;
  margin-bottom: 1rem; }

abbr[title], abbr[data-original-title] {
  cursor: help;
  border-bottom: 1px dotted #aaa; }

address {
  font-style: normal;
  line-height: inherit;
  margin-bottom: 16px;
  margin-bottom: 1rem; }

ol, ul, dl {
  margin-top: 0;
  margin-bottom: 16px;
  margin-bottom: 1rem; }

ol ol, ul ul, ol ul, ul ol {
  margin-bottom: 0; }

dt {
  font-weight: 400; }

dd {
  margin-bottom: 8px;
  margin-bottom: 0.5rem;
  margin-left: 0; }

blockquote {
  margin: 0 0 16px;
  margin: 0 0 1rem; }

a {
  text-decoration: none;
  color: blue; }

a:not([href]):not([tabindex]) {
  text-decoration: none;
  color: inherit; }
  a:not([href]):not([tabindex]):focus {
    outline: none; }

pre {
  overflow: auto;
  margin-top: 0;
  margin-bottom: 16px;
  margin-bottom: 1rem; }

figure {
  margin: 0 0 16px;
  margin: 0 0 1rem; }

img {
  vertical-align: middle; }

[role="button"] {
  cursor: pointer; }

a, area, button, [role="button"], input, label, select, summary, textarea {
  touch-action: manipulation; }

table {
  border-collapse: collapse;
  background-color: white; }

caption {
  caption-side: bottom;
  text-align: left;
  color: #4d4d4d; }

th {
  text-align: left; }

label {
  display: inline-block;
  margin-bottom: 8px;
  margin-bottom: 0.5rem; }

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

input, button, select, textarea {
  line-height: inherit;
  margin: 0;
  border-radius: 0; }

input[type="date"], input[type="time"], input[type="datetime-local"], input[type="month"] {
  -webkit-appearance: listbox; }

textarea {
  resize: vertical; }

fieldset {
  min-width: 0;
  margin: 0;
  padding: 0;
  border: 0; }

legend {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: inherit;
  display: block;
  width: 100%;
  margin-bottom: 8px;
  margin-bottom: 0.5rem;
  padding: 0; }

input[type="search"] {
  -webkit-appearance: none; }

output {
  display: inline-block; }

[hidden] {
  display: none !important; }

.grid {
  background-image: linear-gradient(to bottom, rgba(0, 170, 255, 0.3) 1px, transparent 1px);
  background-repeat: repeat;
  background-size: 2.1rem 2.1rem; }

.margin-0 {
  margin: 0px;
  margin: 0rem; }

.margin-right-0 {
  margin-right: 0px;
  margin-right: 0rem; }

.margin-left-0 {
  margin-left: 0px;
  margin-left: 0rem; }

.margin-top-0 {
  margin-top: 0px;
  margin-top: 0rem; }

.margin-bottom-0 {
  margin-bottom: 0px;
  margin-bottom: 0rem; }

.margin-x-0 {
  margin: 0 0px;
  margin: 0 0rem; }

.margin-1 {
  margin: 33.6px;
  margin: 2.1rem; }

.margin-right-1 {
  margin-right: 33.6px;
  margin-right: 2.1rem; }

.margin-left-1, ul, ol, pre {
  margin-left: 33.6px;
  margin-left: 2.1rem; }

.margin-top-1 {
  margin-top: 33.6px;
  margin-top: 2.1rem; }

.margin-bottom-1 {
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem; }

.margin-x-1 {
  margin: 0 33.6px;
  margin: 0 2.1rem; }

.margin-2 {
  margin: 67.2px;
  margin: 4.2rem; }

.margin-right-2 {
  margin-right: 67.2px;
  margin-right: 4.2rem; }

.margin-left-2 {
  margin-left: 67.2px;
  margin-left: 4.2rem; }

.margin-top-2 {
  margin-top: 67.2px;
  margin-top: 4.2rem; }

.margin-bottom-2 {
  margin-bottom: 67.2px;
  margin-bottom: 4.2rem; }

.margin-x-2 {
  margin: 0 67.2px;
  margin: 0 4.2rem; }

.margin-3 {
  margin: 100.8px;
  margin: 6.3rem; }

.margin-right-3 {
  margin-right: 100.8px;
  margin-right: 6.3rem; }

.margin-left-3 {
  margin-left: 100.8px;
  margin-left: 6.3rem; }

.margin-top-3 {
  margin-top: 100.8px;
  margin-top: 6.3rem; }

.margin-bottom-3 {
  margin-bottom: 100.8px;
  margin-bottom: 6.3rem; }

.margin-x-3 {
  margin: 0 100.8px;
  margin: 0 6.3rem; }

.margin-4 {
  margin: 134.4px;
  margin: 8.4rem; }

.margin-right-4 {
  margin-right: 134.4px;
  margin-right: 8.4rem; }

.margin-left-4 {
  margin-left: 134.4px;
  margin-left: 8.4rem; }

.margin-top-4 {
  margin-top: 134.4px;
  margin-top: 8.4rem; }

.margin-bottom-4 {
  margin-bottom: 134.4px;
  margin-bottom: 8.4rem; }

.margin-x-4 {
  margin: 0 134.4px;
  margin: 0 8.4rem; }

.padding-0 {
  padding: 0px;
  padding: 0rem; }

.padding-right-0 {
  padding-right: 0px;
  padding-right: 0rem; }

.padding-left-0 {
  padding-left: 0px;
  padding-left: 0rem; }

.padding-top-0, caption {
  padding-top: 0px;
  padding-top: 0rem; }

.padding-bottom-0, caption {
  padding-bottom: 0px;
  padding-bottom: 0rem; }

.padding-x-0 {
  padding: 0 0px;
  padding: 0 0rem; }

.padding-1, pre {
  padding: 33.6px;
  padding: 2.1rem; }

.padding-right-1 {
  padding-right: 33.6px;
  padding-right: 2.1rem; }

.padding-left-1, blockquote, .blockquote {
  padding-left: 33.6px;
  padding-left: 2.1rem; }

.padding-top-1 {
  padding-top: 33.6px;
  padding-top: 2.1rem; }

.padding-bottom-1 {
  padding-bottom: 33.6px;
  padding-bottom: 2.1rem; }

.padding-x-1 {
  padding: 0 33.6px;
  padding: 0 2.1rem; }

.padding-2 {
  padding: 67.2px;
  padding: 4.2rem; }

.padding-right-2 {
  padding-right: 67.2px;
  padding-right: 4.2rem; }

.padding-left-2 {
  padding-left: 67.2px;
  padding-left: 4.2rem; }

.padding-top-2 {
  padding-top: 67.2px;
  padding-top: 4.2rem; }

.padding-bottom-2 {
  padding-bottom: 67.2px;
  padding-bottom: 4.2rem; }

.padding-x-2 {
  padding: 0 67.2px;
  padding: 0 4.2rem; }

.padding-3 {
  padding: 100.8px;
  padding: 6.3rem; }

.padding-right-3 {
  padding-right: 100.8px;
  padding-right: 6.3rem; }

.padding-left-3 {
  padding-left: 100.8px;
  padding-left: 6.3rem; }

.padding-top-3 {
  padding-top: 100.8px;
  padding-top: 6.3rem; }

.padding-bottom-3 {
  padding-bottom: 100.8px;
  padding-bottom: 6.3rem; }

.padding-x-3 {
  padding: 0 100.8px;
  padding: 0 6.3rem; }

.padding-4 {
  padding: 134.4px;
  padding: 8.4rem; }

.padding-right-4 {
  padding-right: 134.4px;
  padding-right: 8.4rem; }

.padding-left-4 {
  padding-left: 134.4px;
  padding-left: 8.4rem; }

.padding-top-4 {
  padding-top: 134.4px;
  padding-top: 8.4rem; }

.padding-bottom-4 {
  padding-bottom: 134.4px;
  padding-bottom: 8.4rem; }

.padding-x-4 {
  padding: 0 134.4px;
  padding: 0 8.4rem; }

p, ul, ol, table {
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem; }

hr {
  margin-top: 67.2px;
  margin-top: 4.2rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem;
  border: 0;
  border-top: 1px solid #737373; }

small, .small {
  font-weight: normal;
  font-size: 14.851px;
  font-size: 0.92822rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem; }

.list-inline-item {
  display: inline-block; }

.initialism {
  font-size: 90%;
  text-transform: uppercase; }

.blockquote-reverse {
  padding-left: 0;
  text-align: right;
  border-left: 0; }

.blockquote-reverse .blockquote-footer::before {
  content: ""; }

.blockquote-reverse .blockquote-footer::after {
  content: "\00A0 \2014"; }

.italic, blockquote, .blockquote {
  font-style: italic; }

.regular, blockquote .blockquote-footer, .blockquote .blockquote-footer {
  font-style: normal; }

.primary-font {
  font-family: "Proxima Nova", BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; }

.secondary-font {
  font-family: "Mercury SSm", BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; }

.monospace-font {
  font-family: Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }

h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: "Mercury SSm", BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  font-weight: 300;
  color: #4d4d4d; }

h1, .h1 {
  letter-spacing: -2.827px;
  letter-spacing: -0.1767rem;
  font-size: 59.37px;
  font-size: 3.71063rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  margin-top: 67.2px;
  margin-top: 4.2rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem; }

h2, .h2 {
  letter-spacing: -1.999px;
  letter-spacing: -0.12496rem;
  font-size: 41.987px;
  font-size: 2.62421rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  margin-top: 67.2px;
  margin-top: 4.2rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem; }

h3, .h3 {
  letter-spacing: -1.413px;
  letter-spacing: -0.08837rem;
  font-size: 29.693px;
  font-size: 1.85587rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem; }

h4, .h4 {
  letter-spacing: -1.413px;
  letter-spacing: -0.08837rem;
  font-size: 29.693px;
  font-size: 1.85587rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem; }

h5, .h5 {
  letter-spacing: -1px;
  letter-spacing: -0.0625rem;
  font-size: 21px;
  font-size: 1.3125rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem; }

h6, .h6 {
  letter-spacing: -0.707px;
  letter-spacing: -0.0442rem;
  font-size: 14.851px;
  font-size: 0.92822rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem; }

p {
  font-size: 21px;
  font-size: 1.3125rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem;
  overflow: hidden;
  margin-left: 34px;
  margin-left: 2.125rem;
  font-family: "Proxima Nova", BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; }
  p.lead {
    font-size: 24.971px;
    font-size: 1.56072rem;
    line-height: 33.6px;
    line-height: 2.1rem;
    margin-top: 33.6px;
    margin-top: 2.1rem;
    margin-bottom: 33.6px;
    margin-bottom: 2.1rem;
    font-weight: 300; }

a {
  background: transparent;
  color: crimson;
  transition: all .3s; }
  a:active, a:hover {
    outline: 0; }
  a:hover {
    color: #ed365b; }
  a:visited {
    color: #ad102f; }
    a:visited:hover {
      color: #960e29; }
  a:active {
    color: #ad102f; }

ul, ol {
  font-size: 21px;
  font-size: 1.3125rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem;
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem;
  font-family: "Proxima Nova", BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; }

.single-line-height {
  line-height: 33.6px;
  line-height: 2.1rem; }

.double-line-height, blockquote, .blockquote {
  line-height: 67.2px;
  line-height: 4.2rem; }

/*doc
---
title: Code
name: code
category: Elements
---

Antialiasing is a product of Satan and should be messed with carefully.

*/
/*doc
---
title: Code block
name: code-block
category: Elements
parent: code
---

Antialiasing is a product of Satan and should be messed with carefully.

```
<pre>
  <code>
    This is a code block...
  </code>
</pre>
```

*/
code, pre {
  font-size: 14.851px;
  font-size: 0.92822rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  font-family: Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }

/*doc
---
title: Inline code
name: inline-code
category: Elements
parent: code
---

Antialiasing is a product of Satan and should be messed with carefully.

```html_example
  <p>This is an example of <code>~inline-code</code>.</p>
```

*/
pre {
  background: #f2f2f2;
  border-radius: 3px;
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem;
  overflow: hidden; }

/*doc
---
title: Anti-aliasing
name: antialiasing
category: Helpers
---

Antialiasing is a product of Satan and should be messed with carefully.

```html_example
<h4>Without Anti-aliasing</h4>
<h4 class="antialiased">With Anti-aliasing</h4>
```

*/
.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

/*doc
---
title: Blockquote
name: blockquote
category: Elements
---

Blockquotes are useful when you want to emphasise a piece of quoted text.

```html_example
<blockquote>
  Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum.
  <p class="blockquote-footer">Julius Ceasar</p>
</blockquote>
```

*/
blockquote, .blockquote {
  font-size: 29.693px;
  font-size: 1.85587rem;
  line-height: 33.6px;
  line-height: 2.1rem;
  margin-top: 33.6px;
  margin-top: 2.1rem;
  margin-bottom: 33.6px;
  margin-bottom: 2.1rem;
  border-left: 1px solid #737373; }
  blockquote .blockquote-footer, .blockquote .blockquote-footer {
    font-size: 14.851px;
    font-size: 0.92822rem;
    line-height: 33.6px;
    line-height: 2.1rem;
    margin-top: 33.6px;
    margin-top: 2.1rem;
    margin-bottom: 33.6px;
    margin-bottom: 2.1rem;
    font-family: "Mercury SSm", BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    font-weight: bold; }
    blockquote .blockquote-footer::before, .blockquote .blockquote-footer::before {
      content: "\2014 \00A0"; }

@media screen and (max-width: 544px) {
  :root {
    font-size: 14px; } }

@media screen and (min-width: 1200px) {
  :root {
    font-size: 19px; } }

/*# sourceMappingURL=data:application/json;base64, */
