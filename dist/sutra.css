html {
  box-sizing: border-box; }

*, *::before, *::after {
  box-sizing: inherit; }

@-ms-viewport {
  width: device-width; }

html {
  font-size: 16;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: transparent; }

body {
  font-family: "Publico Text", "Times New Roman", Times, serif;
  font-size: 18 + "px";
  line-height: 1.6;
  color: #737373;
  background-color: none;
  margin: 0; }

[tabindex="-1"]:focus {
  outline: none !important; }

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: 0.5rem; }

p {
  margin-top: 0;
  margin-bottom: 1rem; }

abbr[title], abbr[data-original-title] {
  cursor: help;
  border-bottom: 1px dotted #aaa; }

address {
  font-style: normal;
  line-height: inherit;
  margin-bottom: 1rem; }

ol, ul, dl {
  margin-top: 0;
  margin-bottom: 1rem; }

ol ol, ul ul, ol ul, ul ol {
  margin-bottom: 0; }

dt {
  font-weight: 400; }

dd {
  margin-bottom: 0.5rem;
  margin-left: 0; }

blockquote {
  margin: 0 0 1rem; }

a {
  text-decoration: none;
  color: blue; }

a:not([href]):not([tabindex]) {
  text-decoration: none;
  color: inherit; }
  a:not([href]):not([tabindex]):focus {
    outline: none; }

pre {
  overflow: auto;
  margin-top: 0;
  margin-bottom: 1rem; }

figure {
  margin: 0 0 1rem; }

img {
  vertical-align: middle; }

[role="button"] {
  cursor: pointer; }

a, area, button, [role="button"], input, label, select, summary, textarea {
  touch-action: manipulation; }

th {
  text-align: left; }

label {
  display: inline-block;
  margin-bottom: 0.5rem; }

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

input, button, select, textarea {
  line-height: inherit;
  margin: 0;
  border-radius: 0; }

input[type="date"], input[type="time"], input[type="datetime-local"], input[type="month"] {
  -webkit-appearance: listbox; }

textarea {
  resize: vertical; }

fieldset {
  min-width: 0;
  margin: 0;
  padding: 0;
  border: 0; }

legend {
  font-size: 1.5rem;
  line-height: inherit;
  display: block;
  width: 100%;
  margin-bottom: 0.5rem;
  padding: 0; }

input[type="search"] {
  -webkit-appearance: none; }

output {
  display: inline-block; }

[hidden] {
  display: none !important; }

body {
  background-image: linear-gradient(to bottom, rgba(0, 170, 255, 0.3) 1px, transparent 1px);
  background-position: left -1px;
  background-repeat: repeat; }
  @media screen and (max-width: 1200px) and (min-width: 544px) {
    body {
      background-size: 29px 29px; } }

.margin-1 {
  margin: 1.8125rem; }

.margin-right-1 {
  margin-right: 1.8125rem; }

.margin-left-1, ul, ol {
  margin-left: 1.8125rem; }

.margin-top-1 {
  margin-top: 1.8125rem; }

.margin-bottom-1 {
  margin-bottom: 1.8125rem; }

.margin-x-1 {
  margin: 0 1.8125rem; }

.margin-2 {
  margin: 3.625rem; }

.margin-right-2 {
  margin-right: 3.625rem; }

.margin-left-2 {
  margin-left: 3.625rem; }

.margin-top-2 {
  margin-top: 3.625rem; }

.margin-bottom-2 {
  margin-bottom: 3.625rem; }

.margin-x-2 {
  margin: 0 3.625rem; }

.margin-3 {
  margin: 5.4375rem; }

.margin-right-3 {
  margin-right: 5.4375rem; }

.margin-left-3 {
  margin-left: 5.4375rem; }

.margin-top-3 {
  margin-top: 5.4375rem; }

.margin-bottom-3 {
  margin-bottom: 5.4375rem; }

.margin-x-3 {
  margin: 0 5.4375rem; }

.margin-4 {
  margin: 7.25rem; }

.margin-right-4 {
  margin-right: 7.25rem; }

.margin-left-4 {
  margin-left: 7.25rem; }

.margin-top-4 {
  margin-top: 7.25rem; }

.margin-bottom-4 {
  margin-bottom: 7.25rem; }

.margin-x-4 {
  margin: 0 7.25rem; }

.padding-1, pre {
  padding: 1.8125rem; }

.padding-right-1 {
  padding-right: 1.8125rem; }

.padding-left-1 {
  padding-left: 1.8125rem; }

.padding-top-1 {
  padding-top: 1.8125rem; }

.padding-bottom-1 {
  padding-bottom: 1.8125rem; }

.padding-x-1 {
  padding: 0 1.8125rem; }

.padding-2 {
  padding: 3.625rem; }

.padding-right-2 {
  padding-right: 3.625rem; }

.padding-left-2, blockquote, .blockquote {
  padding-left: 3.625rem; }

.padding-top-2 {
  padding-top: 3.625rem; }

.padding-bottom-2 {
  padding-bottom: 3.625rem; }

.padding-x-2 {
  padding: 0 3.625rem; }

.padding-3 {
  padding: 5.4375rem; }

.padding-right-3 {
  padding-right: 5.4375rem; }

.padding-left-3 {
  padding-left: 5.4375rem; }

.padding-top-3 {
  padding-top: 5.4375rem; }

.padding-bottom-3 {
  padding-bottom: 5.4375rem; }

.padding-x-3 {
  padding: 0 5.4375rem; }

.padding-4 {
  padding: 7.25rem; }

.padding-right-4 {
  padding-right: 7.25rem; }

.padding-left-4 {
  padding-left: 7.25rem; }

.padding-top-4 {
  padding-top: 7.25rem; }

.padding-bottom-4 {
  padding-bottom: 7.25rem; }

.padding-x-4 {
  padding: 0 7.25rem; }

p, ul, ol, blockquote, table, code, pre {
  margin-top: 1.8125rem;
  margin-bottom: 1.8125rem; }

hr {
  margin-top: 1.8125rem;
  margin-bottom: 1.8125rem;
  border: 0;
  border-top: 1px solid #737373; }

small, .small {
  font-weight: normal;
  font-size: 0.8125rem;
  line-height: 1.8125rem;
  margin-top: 1.8125rem;
  margin-bottom: 1.8125rem; }

.list-inline-item {
  display: inline-block; }

.initialism {
  font-size: 90%;
  text-transform: uppercase; }

.blockquote-footer {
  font-size: 80%;
  display: block; }
  .blockquote-footer::before {
    content: "\2014 \00A0"; }

.blockquote-reverse {
  padding-left: 0;
  text-align: right;
  border-left: 0; }

.blockquote-reverse .blockquote-footer::before {
  content: ""; }

.blockquote-reverse .blockquote-footer::after {
  content: "\00A0 \2014"; }

h1, h2, h3, h4, h5, h6 {
  text-rendering: optimizeLegibility;
  font-family: "Circular", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  weight: 400;
  color: #4d4d4d; }

h1, .h1 {
  font-size: 3.1875rem;
  line-height: 3.625rem;
  margin-top: 3.625rem;
  margin-bottom: 1.8125rem; }

h2, .h2 {
  font-size: 2.25rem;
  line-height: 3.625rem;
  margin-top: 3.625rem;
  margin-bottom: 1.8125rem; }

h3, .h3 {
  font-size: 1.5625rem;
  line-height: 1.8125rem;
  margin-top: 1.8125rem;
  margin-bottom: 1.8125rem; }

h4, .h4 {
  font-size: 1.5625rem;
  line-height: 1.8125rem;
  margin-top: 1.8125rem;
  margin-bottom: 1.8125rem; }

h5, .h5 {
  font-size: 1.125rem;
  line-height: 1.8125rem;
  margin-top: 1.8125rem;
  margin-bottom: 1.8125rem; }

h6, .h6 {
  font-size: 0.8125rem;
  line-height: 1.8125rem;
  margin-top: 1.8125rem;
  margin-bottom: 1.8125rem; }

p {
  font-size: 1.125rem;
  line-height: 1.8125rem;
  font-family: "Publico Text", "Times New Roman", Times, serif;
  text-rendering: optimizeLegibility;
  display: block; }
  p.lead {
    font-size: 1.3125rem;
    line-height: 1.8125rem;
    margin-top: 1.8125rem;
    margin-bottom: 1.8125rem;
    font-weight: 500;
    font-style: italic; }

ul, ol {
  font-size: 1.125rem;
  line-height: 1.8125rem;
  margin-top: 1.8125rem;
  margin-bottom: 1.8125rem;
  font-family: "Publico Text", "Times New Roman", Times, serif; }

.single-line-height {
  line-height: 1.8125rem; }

.double-line-height, blockquote, .blockquote {
  line-height: 3.625rem; }

code, pre {
  font-size: 0.9375rem;
  line-height: 1.8125rem;
  margin-top: 1.8125rem;
  margin-bottom: 1.8125rem;
  font-family: Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }

pre {
  background: #f2f2f2;
  border-radius: 3px; }

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

blockquote, .blockquote {
  font-size: 1.5625rem;
  line-height: 1.8125rem;
  margin-top: 1.8125rem;
  margin-bottom: 1.8125rem;
  border-left: 1px solid #737373; }
  blockquote .blockquote-footer, .blockquote .blockquote-footer {
    font-size: 0.8125rem;
    line-height: 1.8125rem;
    margin-top: 1.8125rem;
    margin-bottom: 1.8125rem;
    font-family: "Publico Text", "Times New Roman", Times, serif;
    font-weight: bold; }

@media screen and (max-width: 544px) {
  html {
    font-size: 14px; } }

@media screen and (min-width: 1200px) {
  html {
    font-size: 19px; } }

/*# sourceMappingURL=data:application/json;base64, */
